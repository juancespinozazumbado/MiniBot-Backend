// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MiniBot.Infraestructura.Persistencia;

#nullable disable

namespace MiniBot.Infraestructura.Migrations
{
    [DbContext(typeof(ChatBotDbContext))]
    [Migration("20240705022340_MigracionInical")]
    partial class MigracionInical
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("MiniBot.Dominio.Entitdades.Chat.Diccionario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Consulta")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaCreacion")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FechaModificacion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Respuesta")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Diccionario", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("062bc82d-a4c8-41f4-936d-e823b3b56b33"),
                            Consulta = "Saludo",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5693),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Hola! Soy Boti tu asistente virtual, como puedo ayudarte?"
                        },
                        new
                        {
                            Id = new Guid("2fd2e2b7-9660-4845-acb4-afcd59b5fea9"),
                            Consulta = "¿Cuáles son los horarios de apertura?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5719),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Estamos abiertos de lunes a sábado de 8:00 AM a 8:00 PM y los domingos de 9:00 AM a 6:00 PM."
                        },
                        new
                        {
                            Id = new Guid("36bd3697-9084-4e25-b77e-9de2b92536fb"),
                            Consulta = "¿Dónde están ubicados?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5723),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Estamos ubicados en la calle Principal, número 123, en el centro de la ciudad"
                        },
                        new
                        {
                            Id = new Guid("54c8aea3-36c5-49bc-8acc-af6aaa133996"),
                            Consulta = "¿Ofrecen servicio de entrega a domicilio?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5744),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, ofrecemos servicio de entrega a domicilio. Puedes realizar tu pedido en línea o llamarnos al (123) 456-7890."
                        },
                        new
                        {
                            Id = new Guid("db32d32d-3413-4955-91bc-37c72afe2f47"),
                            Consulta = "¿Aceptan tarjetas de crédito?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5746),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, aceptamos todas las tarjetas de crédito y débito principales."
                        },
                        new
                        {
                            Id = new Guid("c69ee254-2123-4b33-a434-c00f7988b3d6"),
                            Consulta = "¿Tienen productos orgánicos?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5755),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, contamos con una variedad de productos orgánicos en nuestra tienda."
                        },
                        new
                        {
                            Id = new Guid("9da672a5-68a2-41bb-9b20-415c12302aa6"),
                            Consulta = "¿Cuáles son las promociones actuales?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5757),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Actualmente, tenemos una promoción de 2x1 en productos seleccionados. Puedes ver todas nuestras ofertas en nuestra página de promociones."
                        },
                        new
                        {
                            Id = new Guid("8f2805ed-c43e-4662-a132-3c4c7b625b2c"),
                            Consulta = " ¿Puedo hacer un pedido especial?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5759),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, aceptamos pedidos especiales. Por favor, llámanos al (123) 456-7890 para más detalles."
                        },
                        new
                        {
                            Id = new Guid("944098e8-e1da-4ad4-aecc-1cd2caf4d2f2"),
                            Consulta = "¿Tienen productos sin gluten?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5761),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, tenemos una sección dedicada a productos sin gluten. Puedes pedir más información a nuestro personal en la tienda."
                        },
                        new
                        {
                            Id = new Guid("94fb4cd5-1b96-4261-80cd-c82990a29050"),
                            Consulta = "¿Puedo devolver un producto?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5765),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, aceptamos devoluciones dentro de los 30 días de la compra con el recibo original."
                        },
                        new
                        {
                            Id = new Guid("4472b17f-b6d1-4388-b9c7-85cecc1c709a"),
                            Consulta = "¿Tienen un programa de fidelización?",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5767),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Sí, tenemos un programa de fidelización. Puedes registrarte en nuestra tienda y empezar a acumular puntos con cada compra."
                        },
                        new
                        {
                            Id = new Guid("ebd595fc-f0fc-4539-9206-6506bd7a8241"),
                            Consulta = "No reconocida",
                            FechaCreacion = new DateTime(2024, 7, 4, 20, 23, 39, 711, DateTimeKind.Local).AddTicks(5773),
                            FechaModificacion = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Respuesta = "Lo siento, no tengo contexto para responder tu pregunta, podrias darme mas detalles para ayudarte."
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
